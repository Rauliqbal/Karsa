generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Profile Profile?
  CV      CV?
}

model Profile {
  id        String   @id @default(cuid())
  userId    String   @unique
  fullName  String
  jobTitle  String
  email     String
  phone     String?
  address   String?
  website   String?
  linkedin  String?
  github    String?
  photoUrl  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
}

model CV {
  id          String   @id @default(cuid())
  userId      String   @unique
  title       String
  summary     String?
  template    String
  isPublished Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  use        User         @relation(fields: [userId], references: [id])
  Skill      Skill[]
  Education  Education[]
  Experience Experience[]
  Certficate Certficate[]
}

model Education {
  id      String    @id @default(cuid())
  cvId    String
  school  String
  degree  String
  major   String?
  startAt DateTime
  endAt   DateTime?

  cv CV @relation(fields: [cvId], references: [id])
}

model Experience {
  id          String    @id @default(cuid())
  cvId        String
  company     String
  position    String
  description String?
  startAt     DateTime
  endAt       DateTime?

  cv CV @relation(fields: [cvId], references: [id])
}

model Skill {
  id    String @id @default(cuid())
  cvId  String
  name  String
  level String

  cv CV @relation(fields: [cvId], references: [id])
}

model Certficate {
  id       String   @id @default(cuid())
  cvId     String
  name     String
  issuer   String
  issuedAt DateTime
  link     String?

  cv CV @relation(fields: [cvId], references: [id])
}
